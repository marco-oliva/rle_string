//
//  version.hpp.in
//
//  Copyright 2020 Marco Oliva. All rights reserved.
//

#ifndef version_hpp
#define version_hpp

namespace rle
{

struct Version
{
    static constexpr char RLE_GIT_BRANCH[] = "@GIT_BRANCH@";
    static constexpr char RLE_GIT_COMMIT_HASH[] = "@GIT_COMMIT_HASH@";
    static constexpr std::size_t RLE_MAJOR = @VERSION_MAJOR@;
    static constexpr std::size_t RLE_MINOR = @VERSION_MINOR@;
    static constexpr std::size_t RLE_PATCH = @VERSION_PATCH@;
    
    static void print()
    {
        std::cout
        << RLE_GIT_BRANCH << ":"
        << RLE_GIT_COMMIT_HASH << ":"
        << " "
        << RLE_MAJOR << "." << RLE_MINOR << "." << RLE_PATCH
        << std::endl;
        
        exit(0);
    }
};

}

#endif //version_hpp